#!/bin/bash

set -e
user="spidax"

# Do not do snapper backups
export SNAP_PAC_SKIP=y

GPG_KEY_ID="C30D3E7D1257494C"

# dotfiles_dir="$(
#     cd "$(dirname "$0")"
#     pwd
# )"
# cd "$dotfiles_dir"

is_chroot() {
    ! cmp -s /proc/1/mountinfo /proc/self/mountinfo
}

systemctl_enable() {
    echo "systemctl --user enable "$1""
    systemctl --user enable "$1"
}

# Installing missing Arch repo packages
sudo pacman -Syu --noconfirm --needed snapper inetutils xdg-utils xdg-user-dirs ydotool cronie \ 
pipewire pipewire-pulse pipewire-alsa pipewire-jack pipewire-audio wireplumber easyeffects helvum \ 
mesa lib32-mesa vulkan-radeon lib32-vulkan-radeon vulkan-icd-loader lib32-vulkan-icd-loader \ 
zsh-completions zsh-syntax-highlighting zsh-theme-powerlevel10k hyprland xorg-xwayland \
    xdg-desktop-portal-hyprland polkit-kde-agent qt5-wayland qt6-wayland \
    rsync kitty neofetch snap-pac keychain kernel-modules-hook dunst ripgrep \ 
bat yt-dlp mpv gnupg firefox thunar zathura zathura-pdf-mupdf zathura-djvu udiskie hyprpaper imv libnotify \
    wl-clipboard qt5ct qt6ct kvantum-theme-materia materia-theme-gtk papirus-icon-theme

# Setting up ssh and gpg keys
# Optional for setting ssh key and git repository to apply changes
if [ $user == "spidax" ]; then
    yadm decrypt
    chmod 600 ~/.ssh/id_rsa
    chmod 600 ~/.ssh/id_rsa.pub

    gpg --import-options restore,keep-ownertrust --import ~/.gnupg/private.gpg
    find "$HOME/.gnupg" -type f -not -path "*#*" -exec chmod 600 {} \;
    find "$HOME/.gnupg" -type d -exec chmod 700 {} \;

    eval $(keychain --agents 'ssh' --eval --quiet id_rsa)

    yadm remote set-url origin git@github.com:xadips/dots.git
fi

git clone https://aur.archlinux.org/paru-bin.git
cd paru-bin
makepkg -si --noconfirm --needed
paru -S --noconfirm --nocheck --skipreview ttf-blex-nerd-font-git snapper-rollback rofi-lbonn-wayland waybar-hyprland-git \ 
vscodium-bin vscodium-bin-marketplace vscodium-bin-features grimblast-git wl-clip-persist-git
cd ..
rm -rf paru-bin
bash -c "/home/$user/.config/VSCodium/User/extension-install"
sudo bash -c "/home/$user/init.sh"
# Additional packages to add
# youtube-music-bin
# For streaming/encoding OBS
# obs-studio-tytan652 obs-gstreamer obs-vkcapture gstreamer-vaapi
# Better gaming shaders
# vkbasalt
# Poggers usb
# ventoy-bin
# Wine
# wine-staging winetricks
# giflib lib32-giflib libpng lib32-libpng libldap lib32-libldap gnutls lib32-gnutls mpg123 lib32-mpg123 openal lib32-openal v4l-utils lib32-v4l-utils libpulse lib32-libpulse alsa-plugins lib32-alsa-plugins alsa-lib lib32-alsa-lib libjpeg-turbo lib32-libjpeg-turbo libxcomposite lib32-libxcomposite libxinerama lib32-libxinerama ncurses lib32-ncurses opencl-icd-loader lib32-opencl-icd-loader libxslt lib32-libxslt libva lib32-libva gtk3 lib32-gtk3 gst-plugins-base-libs lib32-gst-plugins-base-libs samba dosbox
# Steam
# ttf-liberation lib32-systemd steam proton-ge-custom-bin
# Discord
# noto-fonts-emoji discord-canary-electron-bin discord-canary-update-skip-git
# For android
# android-tools

echo "==========================="
echo "Setting up user dotfiles..."
echo "==========================="

if is_chroot; then
    echo >&2 "=== Running in chroot, skipping user services..."
else
    echo ""
    echo "================================="
    echo "Enabling and starting services..."
    echo "================================="
    systemctl --user daemon-reload
    systemctl_enable "pipewire.service"
    systemctl_enable "pipewire-pulse.service"
    systemctl_enable "wireplumber.service"
    systemctl_enable "polkit-kde.service"
    systemctl_enable "udiskie.service"
    systemctl_enable "waybar.service"
fi

echo ""
echo "======================================="
echo "Finishing various user configuration..."
echo "======================================="

mkdir -p /home/$user/Pictures/screenshots

# if is_chroot; then
#     echo >&2 "=== Running in chroot, skipping GTK file chooser dialog configuration..."
# else
#     #echo "Configuring GTK file chooser dialog"
#     #gsettings set org.gtk.Settings.FileChooser sort-directories-first true
# fi

echo ""
echo "======================================="
echo "Done please reboot..."
echo "======================================="
